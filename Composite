гуид?

Map<ForeingImportMessageType, List<AtomicMessagePartDomain>> foreingMessageParts = groupMessagePartsByType(compositeMessages);

List<ForeignImportMessage> foreignMessages = groupMessagePartsByType(compositeMessages).stream()
							.map((type, messagePartList) -> toForeingImportMessages(type, messagePartList)).




// сгруппируем сообщения по типу
Map<ForeingImportMessageType, List<AtomicMessagePartDomain>> groupMessagePartsByType(CompositeMessages compositeMessages) {
	return compositeMessages.stream()
						.map(c -> new AtomicMessagePartDomain(c.getData()))
						.collect(Collectors.groupingBy(AtomicMessagePartDomain::getType));
}


// конвертируем AtomicMessagePartDomain в ForeignImportMessage
List<ForeignImportMessage> toForeingImportMessages(List<AtomicMessagePartDomain> messageParts, ForeingImportMessageType type) {
	return groupMessagePartsByGuid(messageParts).stream()
					.map((guid, sourcesList) -> {
						String source = "<root>" + String.join("", sourcesList) + "</root>";
						ForeignImportMessage.from(type, source).build();						
					})
					.collect(Collectors.toList());
}

// сгруппируем сообщения по по гуиду
Map<String, String> groupMessagePartsByGuid(List<AtomicMessagePartDomain> messageParts) {
	return messageParts.stream()
					.collect(Collectors.groupingBy(AtomicMessagePartDomain::getGuid));
}
